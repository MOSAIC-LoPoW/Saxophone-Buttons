ARM GAS  /tmp/ccYbWbbF.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"main.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.MX_GPIO_Init,"ax",%progbits
  18              		.align	1
  19              		.syntax unified
  20              		.thumb
  21              		.thumb_func
  22              		.fpu fpv4-sp-d16
  24              	MX_GPIO_Init:
  25              	.LFB126:
  26              		.file 1 "Src/main.c"
   1:Src/main.c    **** /* USER CODE BEGIN Header */
   2:Src/main.c    **** /**
   3:Src/main.c    ****   ******************************************************************************
   4:Src/main.c    ****   * @file           : main.c
   5:Src/main.c    ****   * @brief          : Main program body
   6:Src/main.c    ****   ******************************************************************************
   7:Src/main.c    ****   * This notice applies to any and all portions of this file
   8:Src/main.c    ****   * that are not between comment pairs USER CODE BEGIN and
   9:Src/main.c    ****   * USER CODE END. Other portions of this file, whether 
  10:Src/main.c    ****   * inserted by the user or by software development tools
  11:Src/main.c    ****   * are owned by their respective copyright owners.
  12:Src/main.c    ****   *
  13:Src/main.c    ****   * Copyright (c) 2019 STMicroelectronics International N.V. 
  14:Src/main.c    ****   * All rights reserved.
  15:Src/main.c    ****   *
  16:Src/main.c    ****   * Redistribution and use in source and binary forms, with or without 
  17:Src/main.c    ****   * modification, are permitted, provided that the following conditions are met:
  18:Src/main.c    ****   *
  19:Src/main.c    ****   * 1. Redistribution of source code must retain the above copyright notice, 
  20:Src/main.c    ****   *    this list of conditions and the following disclaimer.
  21:Src/main.c    ****   * 2. Redistributions in binary form must reproduce the above copyright notice,
  22:Src/main.c    ****   *    this list of conditions and the following disclaimer in the documentation
  23:Src/main.c    ****   *    and/or other materials provided with the distribution.
  24:Src/main.c    ****   * 3. Neither the name of STMicroelectronics nor the names of other 
  25:Src/main.c    ****   *    contributors to this software may be used to endorse or promote products 
  26:Src/main.c    ****   *    derived from this software without specific written permission.
  27:Src/main.c    ****   * 4. This software, including modifications and/or derivative works of this 
  28:Src/main.c    ****   *    software, must execute solely and exclusively on microcontroller or
  29:Src/main.c    ****   *    microprocessor devices manufactured by or for STMicroelectronics.
  30:Src/main.c    ****   * 5. Redistribution and use of this software other than as permitted under 
  31:Src/main.c    ****   *    this license is void and will automatically terminate your rights under 
  32:Src/main.c    ****   *    this license. 
ARM GAS  /tmp/ccYbWbbF.s 			page 2


  33:Src/main.c    ****   *
  34:Src/main.c    ****   * THIS SOFTWARE IS PROVIDED BY STMICROELECTRONICS AND CONTRIBUTORS "AS IS" 
  35:Src/main.c    ****   * AND ANY EXPRESS, IMPLIED OR STATUTORY WARRANTIES, INCLUDING, BUT NOT 
  36:Src/main.c    ****   * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY, FITNESS FOR A 
  37:Src/main.c    ****   * PARTICULAR PURPOSE AND NON-INFRINGEMENT OF THIRD PARTY INTELLECTUAL PROPERTY
  38:Src/main.c    ****   * RIGHTS ARE DISCLAIMED TO THE FULLEST EXTENT PERMITTED BY LAW. IN NO EVENT 
  39:Src/main.c    ****   * SHALL STMICROELECTRONICS OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
  40:Src/main.c    ****   * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
  41:Src/main.c    ****   * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, 
  42:Src/main.c    ****   * OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF 
  43:Src/main.c    ****   * LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING 
  44:Src/main.c    ****   * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,
  45:Src/main.c    ****   * EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  46:Src/main.c    ****   *
  47:Src/main.c    ****   ******************************************************************************
  48:Src/main.c    ****   */
  49:Src/main.c    **** /* USER CODE END Header */
  50:Src/main.c    **** 
  51:Src/main.c    **** /* Includes ------------------------------------------------------------------*/
  52:Src/main.c    **** #include "main.h"
  53:Src/main.c    **** 
  54:Src/main.c    **** /* Private includes ----------------------------------------------------------*/
  55:Src/main.c    **** /* USER CODE BEGIN Includes */
  56:Src/main.c    **** 
  57:Src/main.c    **** /* USER CODE END Includes */
  58:Src/main.c    **** 
  59:Src/main.c    **** /* Private typedef -----------------------------------------------------------*/
  60:Src/main.c    **** /* USER CODE BEGIN PTD */
  61:Src/main.c    **** 
  62:Src/main.c    **** /* USER CODE END PTD */
  63:Src/main.c    **** 
  64:Src/main.c    **** /* Private define ------------------------------------------------------------*/
  65:Src/main.c    **** /* USER CODE BEGIN PD */
  66:Src/main.c    **** #define CONNECTED_BUTTONS 10 
  67:Src/main.c    **** /* USER CODE END PD */
  68:Src/main.c    **** 
  69:Src/main.c    **** /* Private macro -------------------------------------------------------------*/
  70:Src/main.c    **** /* USER CODE BEGIN PM */
  71:Src/main.c    **** 
  72:Src/main.c    **** /* USER CODE END PM */
  73:Src/main.c    **** 
  74:Src/main.c    **** /* Private variables ---------------------------------------------------------*/
  75:Src/main.c    **** UART_HandleTypeDef hlpuart1;
  76:Src/main.c    **** 
  77:Src/main.c    **** /* USER CODE BEGIN PV */
  78:Src/main.c    **** uint8_t buttonStatus[CONNECTED_BUTTONS+2];
  79:Src/main.c    **** 
  80:Src/main.c    **** /* USER CODE END PV */
  81:Src/main.c    **** 
  82:Src/main.c    **** /* Private function prototypes -----------------------------------------------*/
  83:Src/main.c    **** void SystemClock_Config(void);
  84:Src/main.c    **** static void MX_GPIO_Init(void);
  85:Src/main.c    **** static void MX_LPUART1_UART_Init(void);
  86:Src/main.c    **** /* USER CODE BEGIN PFP */
  87:Src/main.c    **** static void readButtons(uint8_t* buttonStatus);
  88:Src/main.c    **** 
  89:Src/main.c    **** /* USER CODE END PFP */
ARM GAS  /tmp/ccYbWbbF.s 			page 3


  90:Src/main.c    **** 
  91:Src/main.c    **** /* Private user code ---------------------------------------------------------*/
  92:Src/main.c    **** /* USER CODE BEGIN 0 */
  93:Src/main.c    **** 
  94:Src/main.c    **** /* USER CODE END 0 */
  95:Src/main.c    **** 
  96:Src/main.c    **** /**
  97:Src/main.c    ****   * @brief  The application entry point.
  98:Src/main.c    ****   * @retval int
  99:Src/main.c    ****   */
 100:Src/main.c    **** int main(void)
 101:Src/main.c    **** {
 102:Src/main.c    ****   /* USER CODE BEGIN 1 */
 103:Src/main.c    **** 
 104:Src/main.c    ****   /* USER CODE END 1 */
 105:Src/main.c    **** 
 106:Src/main.c    ****   /* MCU Configuration--------------------------------------------------------*/
 107:Src/main.c    **** 
 108:Src/main.c    ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
 109:Src/main.c    ****   HAL_Init();
 110:Src/main.c    **** 
 111:Src/main.c    ****   /* USER CODE BEGIN Init */
 112:Src/main.c    **** 
 113:Src/main.c    ****   /* USER CODE END Init */
 114:Src/main.c    **** 
 115:Src/main.c    ****   /* Configure the system clock */
 116:Src/main.c    ****   SystemClock_Config();
 117:Src/main.c    **** 
 118:Src/main.c    ****   /* USER CODE BEGIN SysInit */
 119:Src/main.c    **** 
 120:Src/main.c    ****   /* USER CODE END SysInit */
 121:Src/main.c    **** 
 122:Src/main.c    ****   /* Initialize all configured peripherals */
 123:Src/main.c    ****   MX_GPIO_Init();
 124:Src/main.c    ****   MX_LPUART1_UART_Init();
 125:Src/main.c    ****   /* USER CODE BEGIN 2 */
 126:Src/main.c    **** 
 127:Src/main.c    ****   /* USER CODE END 2 */
 128:Src/main.c    **** 
 129:Src/main.c    ****   /* Infinite loop */
 130:Src/main.c    ****   /* USER CODE BEGIN WHILE */
 131:Src/main.c    ****   while (1)
 132:Src/main.c    ****   {
 133:Src/main.c    ****     readButtons(&buttonStatus);
 134:Src/main.c    ****     HAL_UART_Transmit(&hlpuart1, buttonStatus, CONNECTED_BUTTONS+2, HAL_MAX_DELAY);
 135:Src/main.c    ****     /* USER CODE END WHILE */
 136:Src/main.c    **** 
 137:Src/main.c    ****     /* USER CODE BEGIN 3 */
 138:Src/main.c    ****   }
 139:Src/main.c    ****   /* USER CODE END 3 */
 140:Src/main.c    **** }
 141:Src/main.c    **** 
 142:Src/main.c    **** /**
 143:Src/main.c    ****   * @brief System Clock Configuration
 144:Src/main.c    ****   * @retval None
 145:Src/main.c    ****   */
 146:Src/main.c    **** void SystemClock_Config(void)
ARM GAS  /tmp/ccYbWbbF.s 			page 4


 147:Src/main.c    **** {
 148:Src/main.c    ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 149:Src/main.c    ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 150:Src/main.c    ****   RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
 151:Src/main.c    **** 
 152:Src/main.c    ****   /**Initializes the CPU, AHB and APB busses clocks 
 153:Src/main.c    ****   */
 154:Src/main.c    ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_MSI;
 155:Src/main.c    ****   RCC_OscInitStruct.MSIState = RCC_MSI_ON;
 156:Src/main.c    ****   RCC_OscInitStruct.MSICalibrationValue = 0;
 157:Src/main.c    ****   RCC_OscInitStruct.MSIClockRange = RCC_MSIRANGE_9;
 158:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 159:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_MSI;
 160:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLM = 5;
 161:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLN = 71;
 162:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 163:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLQ = RCC_PLLQ_DIV2;
 164:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLR = RCC_PLLR_DIV6;
 165:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 166:Src/main.c    ****   {
 167:Src/main.c    ****     Error_Handler();
 168:Src/main.c    ****   }
 169:Src/main.c    ****   /**Initializes the CPU, AHB and APB busses clocks 
 170:Src/main.c    ****   */
 171:Src/main.c    ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 172:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 173:Src/main.c    ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 174:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV4;
 175:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 176:Src/main.c    ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 177:Src/main.c    **** 
 178:Src/main.c    ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_0) != HAL_OK)
 179:Src/main.c    ****   {
 180:Src/main.c    ****     Error_Handler();
 181:Src/main.c    ****   }
 182:Src/main.c    ****   PeriphClkInit.PeriphClockSelection = RCC_PERIPHCLK_LPUART1;
 183:Src/main.c    ****   PeriphClkInit.Lpuart1ClockSelection = RCC_LPUART1CLKSOURCE_PCLK1;
 184:Src/main.c    ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 185:Src/main.c    ****   {
 186:Src/main.c    ****     Error_Handler();
 187:Src/main.c    ****   }
 188:Src/main.c    ****   /**Configure the main internal regulator output voltage 
 189:Src/main.c    ****   */
 190:Src/main.c    ****   if (HAL_PWREx_ControlVoltageScaling(PWR_REGULATOR_VOLTAGE_SCALE1) != HAL_OK)
 191:Src/main.c    ****   {
 192:Src/main.c    ****     Error_Handler();
 193:Src/main.c    ****   }
 194:Src/main.c    **** }
 195:Src/main.c    **** 
 196:Src/main.c    **** /**
 197:Src/main.c    ****   * @brief LPUART1 Initialization Function
 198:Src/main.c    ****   * @param None
 199:Src/main.c    ****   * @retval None
 200:Src/main.c    ****   */
 201:Src/main.c    **** static void MX_LPUART1_UART_Init(void)
 202:Src/main.c    **** {
 203:Src/main.c    **** 
ARM GAS  /tmp/ccYbWbbF.s 			page 5


 204:Src/main.c    ****   /* USER CODE BEGIN LPUART1_Init 0 */
 205:Src/main.c    **** 
 206:Src/main.c    ****   /* USER CODE END LPUART1_Init 0 */
 207:Src/main.c    **** 
 208:Src/main.c    ****   /* USER CODE BEGIN LPUART1_Init 1 */
 209:Src/main.c    **** 
 210:Src/main.c    ****   /* USER CODE END LPUART1_Init 1 */
 211:Src/main.c    ****   hlpuart1.Instance = LPUART1;
 212:Src/main.c    ****   hlpuart1.Init.BaudRate = 460800;
 213:Src/main.c    ****   hlpuart1.Init.WordLength = UART_WORDLENGTH_8B;
 214:Src/main.c    ****   hlpuart1.Init.StopBits = UART_STOPBITS_1;
 215:Src/main.c    ****   hlpuart1.Init.Parity = UART_PARITY_NONE;
 216:Src/main.c    ****   hlpuart1.Init.Mode = UART_MODE_TX_RX;
 217:Src/main.c    ****   hlpuart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 218:Src/main.c    ****   hlpuart1.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
 219:Src/main.c    ****   hlpuart1.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
 220:Src/main.c    ****   if (HAL_UART_Init(&hlpuart1) != HAL_OK)
 221:Src/main.c    ****   {
 222:Src/main.c    ****     Error_Handler();
 223:Src/main.c    ****   }
 224:Src/main.c    ****   /* USER CODE BEGIN LPUART1_Init 2 */
 225:Src/main.c    **** 
 226:Src/main.c    ****   /* USER CODE END LPUART1_Init 2 */
 227:Src/main.c    **** 
 228:Src/main.c    **** }
 229:Src/main.c    **** 
 230:Src/main.c    **** /**
 231:Src/main.c    ****   * @brief GPIO Initialization Function
 232:Src/main.c    ****   * @param None
 233:Src/main.c    ****   * @retval None
 234:Src/main.c    ****   */
 235:Src/main.c    **** static void MX_GPIO_Init(void)
 236:Src/main.c    **** {
  27              		.loc 1 236 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 56
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31 0000 F0B5     		push	{r4, r5, r6, r7, lr}
  32              	.LCFI0:
  33              		.cfi_def_cfa_offset 20
  34              		.cfi_offset 4, -20
  35              		.cfi_offset 5, -16
  36              		.cfi_offset 6, -12
  37              		.cfi_offset 7, -8
  38              		.cfi_offset 14, -4
  39 0002 8FB0     		sub	sp, sp, #60
  40              	.LCFI1:
  41              		.cfi_def_cfa_offset 80
 237:Src/main.c    ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
  42              		.loc 1 237 0
  43 0004 0024     		movs	r4, #0
  44 0006 0994     		str	r4, [sp, #36]
  45 0008 0A94     		str	r4, [sp, #40]
  46 000a 0B94     		str	r4, [sp, #44]
  47 000c 0C94     		str	r4, [sp, #48]
  48 000e 0D94     		str	r4, [sp, #52]
  49              	.LBB2:
ARM GAS  /tmp/ccYbWbbF.s 			page 6


 238:Src/main.c    **** 
 239:Src/main.c    ****   /* GPIO Ports Clock Enable */
 240:Src/main.c    ****   __HAL_RCC_GPIOC_CLK_ENABLE();
  50              		.loc 1 240 0
  51 0010 5A4B     		ldr	r3, .L3
  52 0012 DA6C     		ldr	r2, [r3, #76]
  53 0014 42F00402 		orr	r2, r2, #4
  54 0018 DA64     		str	r2, [r3, #76]
  55 001a DA6C     		ldr	r2, [r3, #76]
  56 001c 02F00402 		and	r2, r2, #4
  57 0020 0192     		str	r2, [sp, #4]
  58 0022 019A     		ldr	r2, [sp, #4]
  59              	.LBE2:
  60              	.LBB3:
 241:Src/main.c    ****   __HAL_RCC_GPIOH_CLK_ENABLE();
  61              		.loc 1 241 0
  62 0024 DA6C     		ldr	r2, [r3, #76]
  63 0026 42F08002 		orr	r2, r2, #128
  64 002a DA64     		str	r2, [r3, #76]
  65 002c DA6C     		ldr	r2, [r3, #76]
  66 002e 02F08002 		and	r2, r2, #128
  67 0032 0292     		str	r2, [sp, #8]
  68 0034 029A     		ldr	r2, [sp, #8]
  69              	.LBE3:
  70              	.LBB4:
 242:Src/main.c    ****   __HAL_RCC_GPIOA_CLK_ENABLE();
  71              		.loc 1 242 0
  72 0036 DA6C     		ldr	r2, [r3, #76]
  73 0038 42F00102 		orr	r2, r2, #1
  74 003c DA64     		str	r2, [r3, #76]
  75 003e DA6C     		ldr	r2, [r3, #76]
  76 0040 02F00102 		and	r2, r2, #1
  77 0044 0392     		str	r2, [sp, #12]
  78 0046 039A     		ldr	r2, [sp, #12]
  79              	.LBE4:
  80              	.LBB5:
 243:Src/main.c    ****   __HAL_RCC_GPIOF_CLK_ENABLE();
  81              		.loc 1 243 0
  82 0048 DA6C     		ldr	r2, [r3, #76]
  83 004a 42F02002 		orr	r2, r2, #32
  84 004e DA64     		str	r2, [r3, #76]
  85 0050 DA6C     		ldr	r2, [r3, #76]
  86 0052 02F02002 		and	r2, r2, #32
  87 0056 0492     		str	r2, [sp, #16]
  88 0058 049A     		ldr	r2, [sp, #16]
  89              	.LBE5:
  90              	.LBB6:
 244:Src/main.c    ****   __HAL_RCC_GPIOE_CLK_ENABLE();
  91              		.loc 1 244 0
  92 005a DA6C     		ldr	r2, [r3, #76]
  93 005c 42F01002 		orr	r2, r2, #16
  94 0060 DA64     		str	r2, [r3, #76]
  95 0062 DA6C     		ldr	r2, [r3, #76]
  96 0064 02F01002 		and	r2, r2, #16
  97 0068 0592     		str	r2, [sp, #20]
  98 006a 059A     		ldr	r2, [sp, #20]
  99              	.LBE6:
ARM GAS  /tmp/ccYbWbbF.s 			page 7


 100              	.LBB7:
 245:Src/main.c    ****   __HAL_RCC_GPIOB_CLK_ENABLE();
 101              		.loc 1 245 0
 102 006c DA6C     		ldr	r2, [r3, #76]
 103 006e 42F00202 		orr	r2, r2, #2
 104 0072 DA64     		str	r2, [r3, #76]
 105 0074 DA6C     		ldr	r2, [r3, #76]
 106 0076 02F00202 		and	r2, r2, #2
 107 007a 0692     		str	r2, [sp, #24]
 108 007c 069A     		ldr	r2, [sp, #24]
 109              	.LBE7:
 110              	.LBB8:
 246:Src/main.c    ****   __HAL_RCC_GPIOD_CLK_ENABLE();
 111              		.loc 1 246 0
 112 007e DA6C     		ldr	r2, [r3, #76]
 113 0080 42F00802 		orr	r2, r2, #8
 114 0084 DA64     		str	r2, [r3, #76]
 115 0086 DA6C     		ldr	r2, [r3, #76]
 116 0088 02F00802 		and	r2, r2, #8
 117 008c 0792     		str	r2, [sp, #28]
 118 008e 079A     		ldr	r2, [sp, #28]
 119              	.LBE8:
 120              	.LBB9:
 247:Src/main.c    ****   __HAL_RCC_GPIOG_CLK_ENABLE();
 121              		.loc 1 247 0
 122 0090 DA6C     		ldr	r2, [r3, #76]
 123 0092 42F04002 		orr	r2, r2, #64
 124 0096 DA64     		str	r2, [r3, #76]
 125 0098 DB6C     		ldr	r3, [r3, #76]
 126 009a 03F04003 		and	r3, r3, #64
 127 009e 0893     		str	r3, [sp, #32]
 128 00a0 089B     		ldr	r3, [sp, #32]
 129              	.LBE9:
 248:Src/main.c    ****   HAL_PWREx_EnableVddIO2();
 130              		.loc 1 248 0
 131 00a2 FFF7FEFF 		bl	HAL_PWREx_EnableVddIO2
 132              	.LVL0:
 249:Src/main.c    **** 
 250:Src/main.c    ****   /*Configure GPIO pin Output Level */
 251:Src/main.c    ****   HAL_GPIO_WritePin(GPIOB, LD3_Pin|LD2_Pin, GPIO_PIN_RESET);
 133              		.loc 1 251 0
 134 00a6 364F     		ldr	r7, .L3+4
 135 00a8 2246     		mov	r2, r4
 136 00aa 4FF48141 		mov	r1, #16512
 137 00ae 3846     		mov	r0, r7
 138 00b0 FFF7FEFF 		bl	HAL_GPIO_WritePin
 139              	.LVL1:
 252:Src/main.c    **** 
 253:Src/main.c    ****   /*Configure GPIO pin Output Level */
 254:Src/main.c    ****   HAL_GPIO_WritePin(GPIOG, USB_PowerSwitchOn_Pin|SMPS_V1_Pin|SMPS_EN_Pin|SMPS_SW_Pin, GPIO_PIN_RESE
 140              		.loc 1 254 0
 141 00b4 334D     		ldr	r5, .L3+8
 142 00b6 2246     		mov	r2, r4
 143 00b8 4FF43151 		mov	r1, #11328
 144 00bc 2846     		mov	r0, r5
 145 00be FFF7FEFF 		bl	HAL_GPIO_WritePin
 146              	.LVL2:
ARM GAS  /tmp/ccYbWbbF.s 			page 8


 255:Src/main.c    **** 
 256:Src/main.c    ****   /*Configure GPIO pin : B1_Pin */
 257:Src/main.c    ****   GPIO_InitStruct.Pin = B1_Pin;
 147              		.loc 1 257 0
 148 00c2 4FF40053 		mov	r3, #8192
 149 00c6 0993     		str	r3, [sp, #36]
 258:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 150              		.loc 1 258 0
 151 00c8 0A94     		str	r4, [sp, #40]
 259:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 152              		.loc 1 259 0
 153 00ca 0B94     		str	r4, [sp, #44]
 260:Src/main.c    ****   HAL_GPIO_Init(B1_GPIO_Port, &GPIO_InitStruct);
 154              		.loc 1 260 0
 155 00cc 09A9     		add	r1, sp, #36
 156 00ce 2E48     		ldr	r0, .L3+12
 157 00d0 FFF7FEFF 		bl	HAL_GPIO_Init
 158              	.LVL3:
 261:Src/main.c    **** 
 262:Src/main.c    ****   /*Configure GPIO pin : b9_Pin */
 263:Src/main.c    ****   GPIO_InitStruct.Pin = b9_Pin;
 159              		.loc 1 263 0
 160 00d4 8023     		movs	r3, #128
 161 00d6 0993     		str	r3, [sp, #36]
 264:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 162              		.loc 1 264 0
 163 00d8 0A94     		str	r4, [sp, #40]
 265:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 164              		.loc 1 265 0
 165 00da 0B94     		str	r4, [sp, #44]
 266:Src/main.c    ****   HAL_GPIO_Init(b9_GPIO_Port, &GPIO_InitStruct);
 166              		.loc 1 266 0
 167 00dc 09A9     		add	r1, sp, #36
 168 00de 4FF09040 		mov	r0, #1207959552
 169 00e2 FFF7FEFF 		bl	HAL_GPIO_Init
 170              	.LVL4:
 267:Src/main.c    **** 
 268:Src/main.c    ****   /*Configure GPIO pins : b6_Pin b5_Pin b2_Pin b0_Pin */
 269:Src/main.c    ****   GPIO_InitStruct.Pin = b6_Pin|b5_Pin|b2_Pin|b0_Pin;
 171              		.loc 1 269 0
 172 00e6 4FF47043 		mov	r3, #61440
 173 00ea 0993     		str	r3, [sp, #36]
 270:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 174              		.loc 1 270 0
 175 00ec 0A94     		str	r4, [sp, #40]
 271:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 176              		.loc 1 271 0
 177 00ee 0B94     		str	r4, [sp, #44]
 272:Src/main.c    ****   HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 178              		.loc 1 272 0
 179 00f0 09A9     		add	r1, sp, #36
 180 00f2 2648     		ldr	r0, .L3+16
 181 00f4 FFF7FEFF 		bl	HAL_GPIO_Init
 182              	.LVL5:
 273:Src/main.c    **** 
 274:Src/main.c    ****   /*Configure GPIO pins : b4_Pin b3_Pin b1_Pin */
 275:Src/main.c    ****   GPIO_InitStruct.Pin = b4_Pin|b3_Pin|b1_Pin;
ARM GAS  /tmp/ccYbWbbF.s 			page 9


 183              		.loc 1 275 0
 184 00f8 4FF42853 		mov	r3, #10752
 185 00fc 0993     		str	r3, [sp, #36]
 276:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 186              		.loc 1 276 0
 187 00fe 0A94     		str	r4, [sp, #40]
 277:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 188              		.loc 1 277 0
 189 0100 0B94     		str	r4, [sp, #44]
 278:Src/main.c    ****   HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 190              		.loc 1 278 0
 191 0102 09A9     		add	r1, sp, #36
 192 0104 2248     		ldr	r0, .L3+20
 193 0106 FFF7FEFF 		bl	HAL_GPIO_Init
 194              	.LVL6:
 279:Src/main.c    **** 
 280:Src/main.c    ****   /*Configure GPIO pins : LD3_Pin LD2_Pin */
 281:Src/main.c    ****   GPIO_InitStruct.Pin = LD3_Pin|LD2_Pin;
 195              		.loc 1 281 0
 196 010a 4FF48143 		mov	r3, #16512
 197 010e 0993     		str	r3, [sp, #36]
 282:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 198              		.loc 1 282 0
 199 0110 0126     		movs	r6, #1
 200 0112 0A96     		str	r6, [sp, #40]
 283:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 201              		.loc 1 283 0
 202 0114 0B94     		str	r4, [sp, #44]
 284:Src/main.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 203              		.loc 1 284 0
 204 0116 0C94     		str	r4, [sp, #48]
 285:Src/main.c    ****   HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 205              		.loc 1 285 0
 206 0118 09A9     		add	r1, sp, #36
 207 011a 3846     		mov	r0, r7
 208 011c FFF7FEFF 		bl	HAL_GPIO_Init
 209              	.LVL7:
 286:Src/main.c    **** 
 287:Src/main.c    ****   /*Configure GPIO pins : b8_Pin b7_Pin */
 288:Src/main.c    ****   GPIO_InitStruct.Pin = b8_Pin|b7_Pin;
 210              		.loc 1 288 0
 211 0120 4FF44043 		mov	r3, #49152
 212 0124 0993     		str	r3, [sp, #36]
 289:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 213              		.loc 1 289 0
 214 0126 0A94     		str	r4, [sp, #40]
 290:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 215              		.loc 1 290 0
 216 0128 0B94     		str	r4, [sp, #44]
 291:Src/main.c    ****   HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 217              		.loc 1 291 0
 218 012a 09A9     		add	r1, sp, #36
 219 012c 1948     		ldr	r0, .L3+24
 220 012e FFF7FEFF 		bl	HAL_GPIO_Init
 221              	.LVL8:
 292:Src/main.c    **** 
 293:Src/main.c    ****   /*Configure GPIO pins : USB_OverCurrent_Pin SMPS_PG_Pin */
ARM GAS  /tmp/ccYbWbbF.s 			page 10


 294:Src/main.c    ****   GPIO_InitStruct.Pin = USB_OverCurrent_Pin|SMPS_PG_Pin;
 222              		.loc 1 294 0
 223 0132 4FF48153 		mov	r3, #4128
 224 0136 0993     		str	r3, [sp, #36]
 295:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 225              		.loc 1 295 0
 226 0138 0A94     		str	r4, [sp, #40]
 296:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 227              		.loc 1 296 0
 228 013a 0B94     		str	r4, [sp, #44]
 297:Src/main.c    ****   HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 229              		.loc 1 297 0
 230 013c 09A9     		add	r1, sp, #36
 231 013e 2846     		mov	r0, r5
 232 0140 FFF7FEFF 		bl	HAL_GPIO_Init
 233              	.LVL9:
 298:Src/main.c    **** 
 299:Src/main.c    ****   /*Configure GPIO pins : USB_PowerSwitchOn_Pin SMPS_V1_Pin SMPS_EN_Pin SMPS_SW_Pin */
 300:Src/main.c    ****   GPIO_InitStruct.Pin = USB_PowerSwitchOn_Pin|SMPS_V1_Pin|SMPS_EN_Pin|SMPS_SW_Pin;
 234              		.loc 1 300 0
 235 0144 4FF43153 		mov	r3, #11328
 236 0148 0993     		str	r3, [sp, #36]
 301:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 237              		.loc 1 301 0
 238 014a 0A96     		str	r6, [sp, #40]
 302:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 239              		.loc 1 302 0
 240 014c 0B94     		str	r4, [sp, #44]
 303:Src/main.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 241              		.loc 1 303 0
 242 014e 0C94     		str	r4, [sp, #48]
 304:Src/main.c    ****   HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 243              		.loc 1 304 0
 244 0150 09A9     		add	r1, sp, #36
 245 0152 2846     		mov	r0, r5
 246 0154 FFF7FEFF 		bl	HAL_GPIO_Init
 247              	.LVL10:
 305:Src/main.c    **** 
 306:Src/main.c    ****   /*Configure GPIO pins : USB_SOF_Pin USB_ID_Pin USB_DM_Pin USB_DP_Pin */
 307:Src/main.c    ****   GPIO_InitStruct.Pin = USB_SOF_Pin|USB_ID_Pin|USB_DM_Pin|USB_DP_Pin;
 248              		.loc 1 307 0
 249 0158 4FF4E853 		mov	r3, #7424
 250 015c 0993     		str	r3, [sp, #36]
 308:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 251              		.loc 1 308 0
 252 015e 0223     		movs	r3, #2
 253 0160 0A93     		str	r3, [sp, #40]
 309:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 254              		.loc 1 309 0
 255 0162 0B94     		str	r4, [sp, #44]
 310:Src/main.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 256              		.loc 1 310 0
 257 0164 0323     		movs	r3, #3
 258 0166 0C93     		str	r3, [sp, #48]
 311:Src/main.c    ****   GPIO_InitStruct.Alternate = GPIO_AF10_OTG_FS;
 259              		.loc 1 311 0
 260 0168 0A23     		movs	r3, #10
ARM GAS  /tmp/ccYbWbbF.s 			page 11


 261 016a 0D93     		str	r3, [sp, #52]
 312:Src/main.c    ****   HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 262              		.loc 1 312 0
 263 016c 09A9     		add	r1, sp, #36
 264 016e 4FF09040 		mov	r0, #1207959552
 265 0172 FFF7FEFF 		bl	HAL_GPIO_Init
 266              	.LVL11:
 313:Src/main.c    **** 
 314:Src/main.c    **** }
 267              		.loc 1 314 0
 268 0176 0FB0     		add	sp, sp, #60
 269              	.LCFI2:
 270              		.cfi_def_cfa_offset 20
 271              		@ sp needed
 272 0178 F0BD     		pop	{r4, r5, r6, r7, pc}
 273              	.L4:
 274 017a 00BF     		.align	2
 275              	.L3:
 276 017c 00100240 		.word	1073876992
 277 0180 00040048 		.word	1207960576
 278 0184 00180048 		.word	1207965696
 279 0188 00080048 		.word	1207961600
 280 018c 00140048 		.word	1207964672
 281 0190 00100048 		.word	1207963648
 282 0194 000C0048 		.word	1207962624
 283              		.cfi_endproc
 284              	.LFE126:
 286              		.section	.text.MX_LPUART1_UART_Init,"ax",%progbits
 287              		.align	1
 288              		.syntax unified
 289              		.thumb
 290              		.thumb_func
 291              		.fpu fpv4-sp-d16
 293              	MX_LPUART1_UART_Init:
 294              	.LFB125:
 202:Src/main.c    **** 
 295              		.loc 1 202 0
 296              		.cfi_startproc
 297              		@ args = 0, pretend = 0, frame = 0
 298              		@ frame_needed = 0, uses_anonymous_args = 0
 299 0000 08B5     		push	{r3, lr}
 300              	.LCFI3:
 301              		.cfi_def_cfa_offset 8
 302              		.cfi_offset 3, -8
 303              		.cfi_offset 14, -4
 211:Src/main.c    ****   hlpuart1.Init.BaudRate = 460800;
 304              		.loc 1 211 0
 305 0002 0948     		ldr	r0, .L7
 306 0004 094B     		ldr	r3, .L7+4
 307 0006 0360     		str	r3, [r0]
 212:Src/main.c    ****   hlpuart1.Init.WordLength = UART_WORDLENGTH_8B;
 308              		.loc 1 212 0
 309 0008 4FF4E123 		mov	r3, #460800
 310 000c 4360     		str	r3, [r0, #4]
 213:Src/main.c    ****   hlpuart1.Init.StopBits = UART_STOPBITS_1;
 311              		.loc 1 213 0
 312 000e 0023     		movs	r3, #0
ARM GAS  /tmp/ccYbWbbF.s 			page 12


 313 0010 8360     		str	r3, [r0, #8]
 214:Src/main.c    ****   hlpuart1.Init.Parity = UART_PARITY_NONE;
 314              		.loc 1 214 0
 315 0012 C360     		str	r3, [r0, #12]
 215:Src/main.c    ****   hlpuart1.Init.Mode = UART_MODE_TX_RX;
 316              		.loc 1 215 0
 317 0014 0361     		str	r3, [r0, #16]
 216:Src/main.c    ****   hlpuart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 318              		.loc 1 216 0
 319 0016 0C22     		movs	r2, #12
 320 0018 4261     		str	r2, [r0, #20]
 217:Src/main.c    ****   hlpuart1.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
 321              		.loc 1 217 0
 322 001a 8361     		str	r3, [r0, #24]
 218:Src/main.c    ****   hlpuart1.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
 323              		.loc 1 218 0
 324 001c 0362     		str	r3, [r0, #32]
 219:Src/main.c    ****   if (HAL_UART_Init(&hlpuart1) != HAL_OK)
 325              		.loc 1 219 0
 326 001e 4362     		str	r3, [r0, #36]
 220:Src/main.c    ****   {
 327              		.loc 1 220 0
 328 0020 FFF7FEFF 		bl	HAL_UART_Init
 329              	.LVL12:
 228:Src/main.c    **** 
 330              		.loc 1 228 0
 331 0024 08BD     		pop	{r3, pc}
 332              	.L8:
 333 0026 00BF     		.align	2
 334              	.L7:
 335 0028 00000000 		.word	hlpuart1
 336 002c 00800040 		.word	1073774592
 337              		.cfi_endproc
 338              	.LFE125:
 340              		.section	.text.readButtons,"ax",%progbits
 341              		.align	1
 342              		.syntax unified
 343              		.thumb
 344              		.thumb_func
 345              		.fpu fpv4-sp-d16
 347              	readButtons:
 348              	.LFB127:
 315:Src/main.c    **** 
 316:Src/main.c    **** /* USER CODE BEGIN 4 */
 317:Src/main.c    **** static void readButtons(uint8_t* buttonStatus)
 318:Src/main.c    **** {
 349              		.loc 1 318 0
 350              		.cfi_startproc
 351              		@ args = 0, pretend = 0, frame = 0
 352              		@ frame_needed = 0, uses_anonymous_args = 0
 353              	.LVL13:
 354 0000 70B5     		push	{r4, r5, r6, lr}
 355              	.LCFI4:
 356              		.cfi_def_cfa_offset 16
 357              		.cfi_offset 4, -16
 358              		.cfi_offset 5, -12
 359              		.cfi_offset 6, -8
ARM GAS  /tmp/ccYbWbbF.s 			page 13


 360              		.cfi_offset 14, -4
 361 0002 0546     		mov	r5, r0
 319:Src/main.c    ****   buttonStatus[0] = 0xFF;
 362              		.loc 1 319 0
 363 0004 FF23     		movs	r3, #255
 364 0006 0370     		strb	r3, [r0]
 365              	.LVL14:
 366              	.LBB10:
 320:Src/main.c    ****   for(uint8_t i=0; i<CONNECTED_BUTTONS; i++)
 367              		.loc 1 320 0
 368 0008 0024     		movs	r4, #0
 369 000a 08E0     		b	.L10
 370              	.LVL15:
 371              	.L12:
 321:Src/main.c    ****   {
 322:Src/main.c    ****     switch(i)
 323:Src/main.c    ****     {
 324:Src/main.c    ****       case 0:
 325:Src/main.c    ****         buttonStatus[i+1] = HAL_GPIO_ReadPin(b0_GPIO_Port, b0_Pin);
 372              		.loc 1 325 0
 373 000c 661C     		adds	r6, r4, #1
 374 000e 4FF40041 		mov	r1, #32768
 375 0012 3648     		ldr	r0, .L26
 376 0014 FFF7FEFF 		bl	HAL_GPIO_ReadPin
 377              	.LVL16:
 378 0018 A855     		strb	r0, [r5, r6]
 379              	.L11:
 320:Src/main.c    ****   for(uint8_t i=0; i<CONNECTED_BUTTONS; i++)
 380              		.loc 1 320 0 discriminator 2
 381 001a 0134     		adds	r4, r4, #1
 382              	.LVL17:
 383 001c E4B2     		uxtb	r4, r4
 384              	.LVL18:
 385              	.L10:
 320:Src/main.c    ****   for(uint8_t i=0; i<CONNECTED_BUTTONS; i++)
 386              		.loc 1 320 0 is_stmt 0 discriminator 1
 387 001e 092C     		cmp	r4, #9
 388 0020 60D8     		bhi	.L25
 322:Src/main.c    ****     {
 389              		.loc 1 322 0 is_stmt 1
 390 0022 092C     		cmp	r4, #9
 391 0024 F9D8     		bhi	.L11
 392 0026 01A3     		adr	r3, .L13
 393 0028 53F824F0 		ldr	pc, [r3, r4, lsl #2]
 394              		.p2align 2
 395              	.L13:
 396 002c 0D000000 		.word	.L12+1
 397 0030 55000000 		.word	.L14+1
 398 0034 65000000 		.word	.L15+1
 399 0038 75000000 		.word	.L16+1
 400 003c 85000000 		.word	.L17+1
 401 0040 95000000 		.word	.L18+1
 402 0044 A5000000 		.word	.L19+1
 403 0048 B5000000 		.word	.L20+1
 404 004c C5000000 		.word	.L21+1
 405 0050 D5000000 		.word	.L22+1
 406              		.p2align 1
ARM GAS  /tmp/ccYbWbbF.s 			page 14


 407              	.L14:
 326:Src/main.c    ****         break;
 327:Src/main.c    ****       case 1:
 328:Src/main.c    ****         buttonStatus[i+1] = HAL_GPIO_ReadPin(b1_GPIO_Port, b1_Pin);
 408              		.loc 1 328 0
 409 0054 661C     		adds	r6, r4, #1
 410 0056 4FF40051 		mov	r1, #8192
 411 005a 2548     		ldr	r0, .L26+4
 412 005c FFF7FEFF 		bl	HAL_GPIO_ReadPin
 413              	.LVL19:
 414 0060 A855     		strb	r0, [r5, r6]
 329:Src/main.c    ****         break;
 415              		.loc 1 329 0
 416 0062 DAE7     		b	.L11
 417              	.L15:
 330:Src/main.c    ****       case 2:
 331:Src/main.c    ****         buttonStatus[i+1] = HAL_GPIO_ReadPin(b2_GPIO_Port, b2_Pin);
 418              		.loc 1 331 0
 419 0064 661C     		adds	r6, r4, #1
 420 0066 4FF48041 		mov	r1, #16384
 421 006a 2048     		ldr	r0, .L26
 422 006c FFF7FEFF 		bl	HAL_GPIO_ReadPin
 423              	.LVL20:
 424 0070 A855     		strb	r0, [r5, r6]
 332:Src/main.c    ****         break;
 425              		.loc 1 332 0
 426 0072 D2E7     		b	.L11
 427              	.L16:
 333:Src/main.c    ****       case 3:
 334:Src/main.c    ****         buttonStatus[i+1] = HAL_GPIO_ReadPin(b3_GPIO_Port, b3_Pin);
 428              		.loc 1 334 0
 429 0074 661C     		adds	r6, r4, #1
 430 0076 4FF40061 		mov	r1, #2048
 431 007a 1D48     		ldr	r0, .L26+4
 432 007c FFF7FEFF 		bl	HAL_GPIO_ReadPin
 433              	.LVL21:
 434 0080 A855     		strb	r0, [r5, r6]
 335:Src/main.c    ****         break;
 435              		.loc 1 335 0
 436 0082 CAE7     		b	.L11
 437              	.L17:
 336:Src/main.c    ****       case 4:
 337:Src/main.c    ****         buttonStatus[i+1] = HAL_GPIO_ReadPin(b4_GPIO_Port, b4_Pin);
 438              		.loc 1 337 0
 439 0084 661C     		adds	r6, r4, #1
 440 0086 4FF40071 		mov	r1, #512
 441 008a 1948     		ldr	r0, .L26+4
 442 008c FFF7FEFF 		bl	HAL_GPIO_ReadPin
 443              	.LVL22:
 444 0090 A855     		strb	r0, [r5, r6]
 338:Src/main.c    ****         break;
 445              		.loc 1 338 0
 446 0092 C2E7     		b	.L11
 447              	.L18:
 339:Src/main.c    ****       case 5:
 340:Src/main.c    ****         buttonStatus[i+1] = HAL_GPIO_ReadPin(b5_GPIO_Port, b5_Pin);
 448              		.loc 1 340 0
ARM GAS  /tmp/ccYbWbbF.s 			page 15


 449 0094 661C     		adds	r6, r4, #1
 450 0096 4FF40051 		mov	r1, #8192
 451 009a 1448     		ldr	r0, .L26
 452 009c FFF7FEFF 		bl	HAL_GPIO_ReadPin
 453              	.LVL23:
 454 00a0 A855     		strb	r0, [r5, r6]
 341:Src/main.c    ****         break;
 455              		.loc 1 341 0
 456 00a2 BAE7     		b	.L11
 457              	.L19:
 342:Src/main.c    ****       case 6:
 343:Src/main.c    ****         buttonStatus[i+1] = HAL_GPIO_ReadPin(b6_GPIO_Port, b6_Pin);
 458              		.loc 1 343 0
 459 00a4 661C     		adds	r6, r4, #1
 460 00a6 4FF48051 		mov	r1, #4096
 461 00aa 1048     		ldr	r0, .L26
 462 00ac FFF7FEFF 		bl	HAL_GPIO_ReadPin
 463              	.LVL24:
 464 00b0 A855     		strb	r0, [r5, r6]
 344:Src/main.c    ****         break;
 465              		.loc 1 344 0
 466 00b2 B2E7     		b	.L11
 467              	.L20:
 345:Src/main.c    ****       case 7:
 346:Src/main.c    ****         buttonStatus[i+1] = HAL_GPIO_ReadPin(b7_GPIO_Port, b7_Pin);
 468              		.loc 1 346 0
 469 00b4 661C     		adds	r6, r4, #1
 470 00b6 4FF40041 		mov	r1, #32768
 471 00ba 0E48     		ldr	r0, .L26+8
 472 00bc FFF7FEFF 		bl	HAL_GPIO_ReadPin
 473              	.LVL25:
 474 00c0 A855     		strb	r0, [r5, r6]
 347:Src/main.c    ****         break;
 475              		.loc 1 347 0
 476 00c2 AAE7     		b	.L11
 477              	.L21:
 348:Src/main.c    ****       case 8:        
 349:Src/main.c    ****         buttonStatus[i+1] = HAL_GPIO_ReadPin(b8_GPIO_Port, b8_Pin);
 478              		.loc 1 349 0
 479 00c4 661C     		adds	r6, r4, #1
 480 00c6 4FF48041 		mov	r1, #16384
 481 00ca 0A48     		ldr	r0, .L26+8
 482 00cc FFF7FEFF 		bl	HAL_GPIO_ReadPin
 483              	.LVL26:
 484 00d0 A855     		strb	r0, [r5, r6]
 350:Src/main.c    ****         break;
 485              		.loc 1 350 0
 486 00d2 A2E7     		b	.L11
 487              	.L22:
 351:Src/main.c    ****       case 9:
 352:Src/main.c    ****         buttonStatus[i+1] = HAL_GPIO_ReadPin(b9_GPIO_Port, b9_Pin);
 488              		.loc 1 352 0
 489 00d4 661C     		adds	r6, r4, #1
 490 00d6 8021     		movs	r1, #128
 491 00d8 4FF09040 		mov	r0, #1207959552
 492 00dc FFF7FEFF 		bl	HAL_GPIO_ReadPin
 493              	.LVL27:
ARM GAS  /tmp/ccYbWbbF.s 			page 16


 494 00e0 A855     		strb	r0, [r5, r6]
 353:Src/main.c    ****         break;
 495              		.loc 1 353 0
 496 00e2 9AE7     		b	.L11
 497              	.L25:
 498              	.LBE10:
 354:Src/main.c    ****       default:
 355:Src/main.c    ****         break;
 356:Src/main.c    ****     }     
 357:Src/main.c    ****   }
 358:Src/main.c    ****   buttonStatus[CONNECTED_BUTTONS+1] = '\n';
 499              		.loc 1 358 0
 500 00e4 0A23     		movs	r3, #10
 501 00e6 EB72     		strb	r3, [r5, #11]
 359:Src/main.c    **** }
 502              		.loc 1 359 0
 503 00e8 70BD     		pop	{r4, r5, r6, pc}
 504              	.LVL28:
 505              	.L27:
 506 00ea 00BF     		.align	2
 507              	.L26:
 508 00ec 00140048 		.word	1207964672
 509 00f0 00100048 		.word	1207963648
 510 00f4 000C0048 		.word	1207962624
 511              		.cfi_endproc
 512              	.LFE127:
 514              		.section	.text.SystemClock_Config,"ax",%progbits
 515              		.align	1
 516              		.global	SystemClock_Config
 517              		.syntax unified
 518              		.thumb
 519              		.thumb_func
 520              		.fpu fpv4-sp-d16
 522              	SystemClock_Config:
 523              	.LFB124:
 147:Src/main.c    ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 524              		.loc 1 147 0
 525              		.cfi_startproc
 526              		@ args = 0, pretend = 0, frame = 232
 527              		@ frame_needed = 0, uses_anonymous_args = 0
 528 0000 30B5     		push	{r4, r5, lr}
 529              	.LCFI5:
 530              		.cfi_def_cfa_offset 12
 531              		.cfi_offset 4, -12
 532              		.cfi_offset 5, -8
 533              		.cfi_offset 14, -4
 534 0002 BBB0     		sub	sp, sp, #236
 535              	.LCFI6:
 536              		.cfi_def_cfa_offset 248
 148:Src/main.c    ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 537              		.loc 1 148 0
 538 0004 2422     		movs	r2, #36
 539 0006 0021     		movs	r1, #0
 540 0008 2AA8     		add	r0, sp, #168
 541 000a FFF7FEFF 		bl	memset
 542              	.LVL29:
 149:Src/main.c    ****   RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
ARM GAS  /tmp/ccYbWbbF.s 			page 17


 543              		.loc 1 149 0
 544 000e 0024     		movs	r4, #0
 545 0010 2494     		str	r4, [sp, #144]
 546 0012 2594     		str	r4, [sp, #148]
 547 0014 2694     		str	r4, [sp, #152]
 548 0016 2794     		str	r4, [sp, #156]
 549 0018 2894     		str	r4, [sp, #160]
 150:Src/main.c    **** 
 550              		.loc 1 150 0
 551 001a 8C22     		movs	r2, #140
 552 001c 2146     		mov	r1, r4
 553 001e 01A8     		add	r0, sp, #4
 554 0020 FFF7FEFF 		bl	memset
 555              	.LVL30:
 154:Src/main.c    ****   RCC_OscInitStruct.MSIState = RCC_MSI_ON;
 556              		.loc 1 154 0
 557 0024 1023     		movs	r3, #16
 558 0026 2993     		str	r3, [sp, #164]
 155:Src/main.c    ****   RCC_OscInitStruct.MSICalibrationValue = 0;
 559              		.loc 1 155 0
 560 0028 0122     		movs	r2, #1
 561 002a 2F92     		str	r2, [sp, #188]
 157:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 562              		.loc 1 157 0
 563 002c 9025     		movs	r5, #144
 564 002e 3195     		str	r5, [sp, #196]
 158:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_MSI;
 565              		.loc 1 158 0
 566 0030 0223     		movs	r3, #2
 567 0032 3393     		str	r3, [sp, #204]
 159:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLM = 5;
 568              		.loc 1 159 0
 569 0034 3492     		str	r2, [sp, #208]
 160:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLN = 71;
 570              		.loc 1 160 0
 571 0036 0522     		movs	r2, #5
 572 0038 3592     		str	r2, [sp, #212]
 161:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 573              		.loc 1 161 0
 574 003a 4722     		movs	r2, #71
 575 003c 3692     		str	r2, [sp, #216]
 162:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLQ = RCC_PLLQ_DIV2;
 576              		.loc 1 162 0
 577 003e 3793     		str	r3, [sp, #220]
 163:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLR = RCC_PLLR_DIV6;
 578              		.loc 1 163 0
 579 0040 3893     		str	r3, [sp, #224]
 164:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 580              		.loc 1 164 0
 581 0042 0623     		movs	r3, #6
 582 0044 3993     		str	r3, [sp, #228]
 165:Src/main.c    ****   {
 583              		.loc 1 165 0
 584 0046 29A8     		add	r0, sp, #164
 585 0048 FFF7FEFF 		bl	HAL_RCC_OscConfig
 586              	.LVL31:
 171:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
ARM GAS  /tmp/ccYbWbbF.s 			page 18


 587              		.loc 1 171 0
 588 004c 0F23     		movs	r3, #15
 589 004e 2493     		str	r3, [sp, #144]
 173:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV4;
 590              		.loc 1 173 0
 591 0050 0323     		movs	r3, #3
 592 0052 2593     		str	r3, [sp, #148]
 174:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 593              		.loc 1 174 0
 594 0054 2695     		str	r5, [sp, #152]
 175:Src/main.c    ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 595              		.loc 1 175 0
 596 0056 4FF48063 		mov	r3, #1024
 597 005a 2793     		str	r3, [sp, #156]
 176:Src/main.c    **** 
 598              		.loc 1 176 0
 599 005c 2894     		str	r4, [sp, #160]
 178:Src/main.c    ****   {
 600              		.loc 1 178 0
 601 005e 2146     		mov	r1, r4
 602 0060 0DEB0500 		add	r0, sp, r5
 603 0064 FFF7FEFF 		bl	HAL_RCC_ClockConfig
 604              	.LVL32:
 182:Src/main.c    ****   PeriphClkInit.Lpuart1ClockSelection = RCC_LPUART1CLKSOURCE_PCLK1;
 605              		.loc 1 182 0
 606 0068 2023     		movs	r3, #32
 607 006a 0193     		str	r3, [sp, #4]
 183:Src/main.c    ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 608              		.loc 1 183 0
 609 006c 1494     		str	r4, [sp, #80]
 184:Src/main.c    ****   {
 610              		.loc 1 184 0
 611 006e 01A8     		add	r0, sp, #4
 612 0070 FFF7FEFF 		bl	HAL_RCCEx_PeriphCLKConfig
 613              	.LVL33:
 190:Src/main.c    ****   {
 614              		.loc 1 190 0
 615 0074 4FF40070 		mov	r0, #512
 616 0078 FFF7FEFF 		bl	HAL_PWREx_ControlVoltageScaling
 617              	.LVL34:
 194:Src/main.c    **** 
 618              		.loc 1 194 0
 619 007c 3BB0     		add	sp, sp, #236
 620              	.LCFI7:
 621              		.cfi_def_cfa_offset 12
 622              		@ sp needed
 623 007e 30BD     		pop	{r4, r5, pc}
 624              		.cfi_endproc
 625              	.LFE124:
 627              		.section	.text.main,"ax",%progbits
 628              		.align	1
 629              		.global	main
 630              		.syntax unified
 631              		.thumb
 632              		.thumb_func
 633              		.fpu fpv4-sp-d16
 635              	main:
ARM GAS  /tmp/ccYbWbbF.s 			page 19


 636              	.LFB123:
 101:Src/main.c    ****   /* USER CODE BEGIN 1 */
 637              		.loc 1 101 0
 638              		.cfi_startproc
 639              		@ Volatile: function does not return.
 640              		@ args = 0, pretend = 0, frame = 0
 641              		@ frame_needed = 0, uses_anonymous_args = 0
 642 0000 08B5     		push	{r3, lr}
 643              	.LCFI8:
 644              		.cfi_def_cfa_offset 8
 645              		.cfi_offset 3, -8
 646              		.cfi_offset 14, -4
 109:Src/main.c    **** 
 647              		.loc 1 109 0
 648 0002 FFF7FEFF 		bl	HAL_Init
 649              	.LVL35:
 116:Src/main.c    **** 
 650              		.loc 1 116 0
 651 0006 FFF7FEFF 		bl	SystemClock_Config
 652              	.LVL36:
 123:Src/main.c    ****   MX_LPUART1_UART_Init();
 653              		.loc 1 123 0
 654 000a FFF7FEFF 		bl	MX_GPIO_Init
 655              	.LVL37:
 124:Src/main.c    ****   /* USER CODE BEGIN 2 */
 656              		.loc 1 124 0
 657 000e FFF7FEFF 		bl	MX_LPUART1_UART_Init
 658              	.LVL38:
 659              	.L31:
 133:Src/main.c    ****     HAL_UART_Transmit(&hlpuart1, buttonStatus, CONNECTED_BUTTONS+2, HAL_MAX_DELAY);
 660              		.loc 1 133 0 discriminator 1
 661 0012 064C     		ldr	r4, .L33
 662 0014 2046     		mov	r0, r4
 663 0016 FFF7FEFF 		bl	readButtons
 664              	.LVL39:
 134:Src/main.c    ****     /* USER CODE END WHILE */
 665              		.loc 1 134 0 discriminator 1
 666 001a 4FF0FF33 		mov	r3, #-1
 667 001e 0C22     		movs	r2, #12
 668 0020 2146     		mov	r1, r4
 669 0022 0348     		ldr	r0, .L33+4
 670 0024 FFF7FEFF 		bl	HAL_UART_Transmit
 671              	.LVL40:
 672 0028 F3E7     		b	.L31
 673              	.L34:
 674 002a 00BF     		.align	2
 675              	.L33:
 676 002c 00000000 		.word	buttonStatus
 677 0030 00000000 		.word	hlpuart1
 678              		.cfi_endproc
 679              	.LFE123:
 681              		.section	.text.Error_Handler,"ax",%progbits
 682              		.align	1
 683              		.global	Error_Handler
 684              		.syntax unified
 685              		.thumb
 686              		.thumb_func
ARM GAS  /tmp/ccYbWbbF.s 			page 20


 687              		.fpu fpv4-sp-d16
 689              	Error_Handler:
 690              	.LFB128:
 360:Src/main.c    **** 
 361:Src/main.c    **** /* USER CODE END 4 */
 362:Src/main.c    **** 
 363:Src/main.c    **** /**
 364:Src/main.c    ****   * @brief  This function is executed in case of error occurrence.
 365:Src/main.c    ****   * @retval None
 366:Src/main.c    ****   */
 367:Src/main.c    **** void Error_Handler(void)
 368:Src/main.c    **** {
 691              		.loc 1 368 0
 692              		.cfi_startproc
 693              		@ args = 0, pretend = 0, frame = 0
 694              		@ frame_needed = 0, uses_anonymous_args = 0
 695              		@ link register save eliminated.
 369:Src/main.c    ****   /* USER CODE BEGIN Error_Handler_Debug */
 370:Src/main.c    ****   /* User can add his own implementation to report the HAL error return state */
 371:Src/main.c    **** 
 372:Src/main.c    ****   /* USER CODE END Error_Handler_Debug */
 373:Src/main.c    **** }
 696              		.loc 1 373 0
 697 0000 7047     		bx	lr
 698              		.cfi_endproc
 699              	.LFE128:
 701              		.comm	buttonStatus,12,4
 702              		.comm	hlpuart1,120,4
 703              		.text
 704              	.Letext0:
 705              		.file 2 "/home/mats/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/machine/_default_type
 706              		.file 3 "/home/mats/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/sys/_stdint.h"
 707              		.file 4 "Drivers/CMSIS/Include/core_cm4.h"
 708              		.file 5 "Drivers/CMSIS/Device/ST/STM32L4xx/Include/system_stm32l4xx.h"
 709              		.file 6 "Drivers/CMSIS/Device/ST/STM32L4xx/Include/stm32l496xx.h"
 710              		.file 7 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_def.h"
 711              		.file 8 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_rcc.h"
 712              		.file 9 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_rcc_ex.h"
 713              		.file 10 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_gpio.h"
 714              		.file 11 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_dma.h"
 715              		.file 12 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_uart.h"
 716              		.file 13 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal.h"
 717              		.file 14 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_pwr_ex.h"
 718              		.file 15 "<built-in>"
ARM GAS  /tmp/ccYbWbbF.s 			page 21


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
     /tmp/ccYbWbbF.s:18     .text.MX_GPIO_Init:0000000000000000 $t
     /tmp/ccYbWbbF.s:24     .text.MX_GPIO_Init:0000000000000000 MX_GPIO_Init
     /tmp/ccYbWbbF.s:276    .text.MX_GPIO_Init:000000000000017c $d
     /tmp/ccYbWbbF.s:287    .text.MX_LPUART1_UART_Init:0000000000000000 $t
     /tmp/ccYbWbbF.s:293    .text.MX_LPUART1_UART_Init:0000000000000000 MX_LPUART1_UART_Init
     /tmp/ccYbWbbF.s:335    .text.MX_LPUART1_UART_Init:0000000000000028 $d
                            *COM*:0000000000000078 hlpuart1
     /tmp/ccYbWbbF.s:341    .text.readButtons:0000000000000000 $t
     /tmp/ccYbWbbF.s:347    .text.readButtons:0000000000000000 readButtons
     /tmp/ccYbWbbF.s:396    .text.readButtons:000000000000002c $d
     /tmp/ccYbWbbF.s:406    .text.readButtons:0000000000000054 $t
     /tmp/ccYbWbbF.s:508    .text.readButtons:00000000000000ec $d
     /tmp/ccYbWbbF.s:515    .text.SystemClock_Config:0000000000000000 $t
     /tmp/ccYbWbbF.s:522    .text.SystemClock_Config:0000000000000000 SystemClock_Config
     /tmp/ccYbWbbF.s:628    .text.main:0000000000000000 $t
     /tmp/ccYbWbbF.s:635    .text.main:0000000000000000 main
     /tmp/ccYbWbbF.s:676    .text.main:000000000000002c $d
                            *COM*:000000000000000c buttonStatus
     /tmp/ccYbWbbF.s:682    .text.Error_Handler:0000000000000000 $t
     /tmp/ccYbWbbF.s:689    .text.Error_Handler:0000000000000000 Error_Handler

UNDEFINED SYMBOLS
HAL_PWREx_EnableVddIO2
HAL_GPIO_WritePin
HAL_GPIO_Init
HAL_UART_Init
HAL_GPIO_ReadPin
memset
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_RCCEx_PeriphCLKConfig
HAL_PWREx_ControlVoltageScaling
HAL_Init
HAL_UART_Transmit
